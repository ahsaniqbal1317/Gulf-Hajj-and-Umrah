@model Gulf_Hajj_and_Ummrah.Models.GroupMembersViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("Create", "GroupMembers"))
{
    @Html.AntiForgeryToken()

<div class="card">
    <div class="card-header bg-blue">
        <div class="row">
            <div class="col-md-6">
                <h4>Add Group Member</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.client_Details_Tbl.id)
            </div>
        </div>
    </div>
    <div class="card-body">
        <h6>Group Leader Name: <strong> @Model.client_Details_Tbl.name</strong></h6><h6> (Reg: @Model.client_Details_Tbl.id)</h6>
        <div class="form-horizontal">
            <div class="row">

                <div class="col-md-4">
                    <div class="form-group">
                        <label>Name of Group Member</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addmember.name, new { htmlAttributes = new {@required=true, @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.addmember.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Phone Number</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addmember.phoneNumber, new { htmlAttributes = new { @required = true, @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.addmember.phoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.HiddenFor(model => model.client_Details_Tbl.billing_details_tbl.FirstOrDefault().id)
                    <div class="form-group">
                        <label>Passport Number</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addmember.passport_number, new { htmlAttributes = new { @required = true, @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.addmember.passport_number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="form-group">
                        <label>Package Cost</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addmember.packageAmount, new { htmlAttributes = new { @required = true, @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.addmember.packageAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Airline Cost</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addmember.airlineAmount, new { htmlAttributes = new { @required = true, @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.addmember.airlineAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.HiddenFor(model => model.client_Details_Tbl.billing_details_tbl.FirstOrDefault().id)
                    <div class="form-group">
                        <label>Visa Cost</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addmember.visaAmount, new { htmlAttributes = new { @required = true, @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.addmember.visaAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.HiddenFor(model => model.client_Details_Tbl.billing_details_tbl.FirstOrDefault().id)
                    <div class="form-group">
                        <label>Transport Cost</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.addmember.transportAmount, new { htmlAttributes = new { @required = true, @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.addmember.transportAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add Member" class="btn btn-primary" />
                    <input type="reset" value="Reset" class="btn btn-danger" />
                </div>
            </div>
        </div>
    </div>
</div>

}
<div class="card">
    <div class="card-header bg-blue">
        <div class="row">
            <div class="col-md-6">
                <h4>List of Group Members and Payment Info</h4>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-bordered" id="myTable">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Phone Number
                    </th>
                    <th>
                        Passport Number
                    </th>
                    <th>
                        Total Amount
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.members)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.phoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.passport_number)
                    </td>
                    <td>
                        @(item.visaAmount + item.transportAmount  + item.packageAmount + item.airlineAmount)
                    </td>
                    <td>
                        <a class='btn btn-success btn-sm' onclick="PopupForm(@item.id)"><i class="fas fa-pen"></i>Edit </a>
                        <a class='btn btn-danger btn-sm' onclick="Delete(@item.id)"><i class="fas fa-trash"></i>Delete </a>
                    </td>
                </tr>
                }
            </tbody>
        </table>
        <div class="col-md-6">
            <label>Total Amount (Leader and @Model.members.Where(x=>x.isDeleted!=true).Count() Group Members) </label>
            @Html.EditorFor(model => model.totalAmount, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.totalAmount, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
@*<div class="card">
    <div class="card-header bg-blue">
        <div class="col-md-6">
            <h4>Details of Payment</h4>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <label>Amount Per Person</label>
                @Html.EditorFor(model => model.clientPaymentForOne, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.clientPaymentForOne, "", new { @class = "text-danger" })
            </div>
           
        </div>
    </div>
</div>*@
<br/>





<div class="modal fade bd-example-modal-lg" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-indigo">

                <h5 class="modal-title" id="exampleModalLabel"><i class="fa fa-pen" -></i>Edit Member Details</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalbody">

            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>



@section scripts{


    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.5/js/jquery.dataTables.js"></script>

    <script>
        $(document).ready(function () {
            $('#myTable').DataTable();

            $('#myTable_wrapper').css("padding-left", 100);
            $('#myTable_wrapper').css("padding-right", 100);
        });


        function PopupForm(id) {
            //if (id > 0) {
            //    document.getElementById("exampleModalLabel").innerHTML = "Edit Client Details";
            //    $("#exampleModalLabel").removeClass("fa fa-plus");
            //    $("#exampleModalLabel").addClass("fa fa-pen");
            //}
            //else {
            //    document.getElementById("exampleModalLabel").innerHTML = "Add Client Details";
            //    $("#exampleModalLabel").removeClass("fa fa-pen");
            //    $("#exampleModalLabel").addClass("fa fa-plus");
            //}
            var url = "/GroupMembers/Edit?id=" + id;
            var formDiv = $('#modalbody');
            $.get(url)
                .done(function (response) {
                    formDiv.html(response);

                });
            $("#exampleModal").modal("show");
        }
        function Delete(id) {

    if (confirm('Are You Sure You want Delete this Record ?')) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("Delete", "GroupMembers")/' + id,
            success: function (data) {
                if (data.success) {

                    location.reload(true);

                    $.notify(data.message, {
                        globalPosition: "top center",
                        className: "success"
                    })

                }
            }
        });
    }
}

    </script>
}